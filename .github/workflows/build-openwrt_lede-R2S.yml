name: Build OpenWrt_lede-R2S

on:
  push:
    paths:
      - 'R2S.config'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: R2S.config
  CUSTOM_FEED: custom-feed.sh
  CUSTOM_CONFIG: custom-config.sh
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL raw.githubusercontent.com/ADJazzzz/OpenWrt/main/lede-depends)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone Source Code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load Custom Feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $CUSTOM_FEED
        cd openwrt
        $GITHUB_WORKSPACE/$CUSTOM_FEED

    - name: Update And Install Feeds 1
      run: cd openwrt && ./scripts/feeds update -a && rm -rf feeds/packages/net/adguardhome && ./scripts/feeds install -a

    - name: Update And Install Feeds 2
      run: cd openwrt && ./scripts/feeds update -a && rm -rf feeds/packages/net/adguardhome && ./scripts/feeds install -a

    - name: Load Custom Configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $CUSTOM_CONFIG
        cd openwrt
        $GITHUB_WORKSPACE/$CUSTOM_CONFIG

    - name: Download Package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile The Firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "COMPILE_STATUS=success" >> "$GITHUB_OUTPUT"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check Space Usage
      if: (!cancelled())
      run: df -hT

    - name: Upload Bin Directory
      uses: actions/upload-artifact@v3
      if: steps.compile.outputs.COMPILE_STATUS == 'success' && !cancelled()
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize Files
      id: organize
      if: steps.compile.outputs.COMPILE_STATUS == 'success' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "ORGANIZE_STATUS=success" >> "$GITHUB_OUTPUT"

    - name: Upload Firmware Directory
      uses: actions/upload-artifact@v3
      if: steps.organize.outputs.ORGANIZE_STATUS == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate Release Tag
      id: tag
      if: steps.organize.outputs.ORGANIZE_STATUS == 'success' && !cancelled()
      run: |
        echo "RELEASE_TAG=$(date +"%Y.%m.%d-%H%M")" >> "$GITHUB_OUTPUT"
        touch release.txt
        echo "TAG_STATUS=success" >> "$GITHUB_OUTPUT"

    - name: Upload Firmware To Release
      uses: softprops/action-gh-release@v0.1.15
      if: steps.tag.outputs.TAG_STATUS == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: R2S-${{ steps.tag.outputs.RELEASE_TAG }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
